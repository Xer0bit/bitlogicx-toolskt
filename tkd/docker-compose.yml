version: '3.8'

services:
  web:
    build: .
    container_name: django_app
    command: >
      bash -c "
        python manage.py makemigrations admin_app tools users subscription pages &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn tkd.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

  db:
    image: postgres:13
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5434:5432"  # Changed from 5432 to avoid conflicts
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:80"  # Changed from 80 to avoid conflicts
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - web
    networks:
      - app_network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  app_network:
    driver: bridge
